generator client {
  provider = "prisma-client-js"
  output   = "./generated/legacy-client"
}

datasource db {
  provider = "mysql"
  url      = env("OLD_DATABASE_URL")
}

model Modules {
  id          Int        @id @default(autoincrement()) @db.UnsignedInt
  user_id     Int        @db.UnsignedInt
  name        String     @unique(map: "modules_name_unique") @db.VarChar(64)
  description String     @db.Text
  image       String?    @db.VarChar(50)
  downloads   Int        @default(0) @db.UnsignedInt
  hidden      Boolean    @default(false)
  created_at  DateTime?  @db.Timestamp(0)
  updated_at  DateTime?  @db.Timestamp(0)
  tags        String?    @default("") @db.VarChar(2000)
  Releases    Releases[]
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model PasswordResets {
  email      String
  token      String   @db.VarChar(36)
  expiration DateTime @db.DateTime(0)

  @@ignore
}

model Releases {
  id                   Bytes    @id @db.Binary(16)
  module_id            Int      @db.UnsignedInt
  release_version      String   @db.VarChar(20)
  mod_version          String   @db.VarChar(20)
  changelog            String   @db.Text
  downloads            Int      @default(0)
  created_at           DateTime @db.DateTime(6)
  updated_at           DateTime @db.DateTime(6)
  verified             Boolean  @default(false)
  verification_token   String?  @db.VarChar(36)
  verification_message BigInt?  @db.UnsignedBigInt
  Modules              Modules  @relation(fields: [module_id], references: [id], onUpdate: Restrict, map: "fk_Releases_module_id_id")

  @@index([module_id], map: "fk_Releases_module_id_id")
}

model TrackedTimestamps {
  id           Int          @id @default(autoincrement())
  user         Int
  time         DateTime     @db.Date
  TrackedUsers TrackedUsers @relation(fields: [user], references: [id], onUpdate: Restrict, map: "TrackedTimestamps_ibfk_1")

  @@index([user], map: "user")
}

model TrackedUsers {
  id                Int                 @id @default(autoincrement())
  hash              String              @unique(map: "hash") @db.VarChar(100)
  version           String              @default("2.0.0") @db.VarChar(20)
  TrackedTimestamps TrackedTimestamps[]
}

model Users {
  id             Int        @id @default(autoincrement()) @db.UnsignedInt
  name           String     @unique(map: "users_name_unique")
  email          String     @unique(map: "users_email_unique")
  password       String
  rank           Users_rank @default(default)
  remember_token String?    @db.VarChar(100)
  created_at     DateTime?  @db.Timestamp(0)
  updated_at     DateTime?  @db.Timestamp(0)
}

enum Users_rank {
  default
  trusted
  admin
}
